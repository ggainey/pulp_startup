#!/bin/python

"""
Assumes the following exists:
server/managers/repo/unit_association.py:

class TestTask(object):
    @staticmethod
    def say_hello(greeting):
        return 'I should say [%s]' % greeting
say_hello = task(TestTask.say_hello, base=Task)
"""
from pulp.common import constants, dateutils, tags
from pulp.server.db.connection import initialize
from time import sleep

initialize()
from pulp.server.managers.repo.unit_association import say_hello

say_hello.apply_async_with_reservation(tags.RESOURCE_REPOSITORY_TYPE, 'zoo', args=[5, 'Greetings'])  # immed
sleep(5)

say_hello.apply_async_with_reservation(tags.RESOURCE_REPOSITORY_TYPE, 'zoo', args=[5, 'Greetings']) #immed
say_hello.apply_async_with_reservation(tags.RESOURCE_REPOSITORY_TYPE, 'bar', args=[5, 'Greetings']) #immed
say_hello.apply_async_with_reservation_list([(tags.RESOURCE_REPOSITORY_TYPE, 'zoo'), (tags.RESOURCE_REPOSITORY_TYPE, 'bar')], args=[1, 'Greetings']) # 5 sec delay
sleep(5)

say_hello.apply_async_with_reservation(tags.RESOURCE_REPOSITORY_TYPE, 'zoo', args=[5, 'Greetings']) #immed
say_hello.apply_async_with_reservation_list([(tags.RESOURCE_REPOSITORY_TYPE, 'bar')], args=[5, 'Greetings']) #immed
say_hello.apply_async_with_reservation_list([(tags.RESOURCE_REPOSITORY_TYPE, 'zoo'), (tags.RESOURCE_REPOSITORY_TYPE, 'bar')], args=[1, 'Greetings']) # 5 sec delay
sleep(5)

say_hello.apply_async_with_reservation(tags.RESOURCE_REPOSITORY_TYPE, 'zoo', args=[5, 'Greetings']) # immed
say_hello.apply_async_with_reservation_list([(tags.RESOURCE_REPOSITORY_TYPE, 'zoo')], args=[5, 'Greetings']) # immed
say_hello.apply_async_with_reservation_list([(tags.RESOURCE_REPOSITORY_TYPE, 'zoo'), (tags.RESOURCE_REPOSITORY_TYPE, 'bar'), (tags.RESOURCE_REPOSITORY_TYPE, 'blech')], args=[5, 'Greetings']) # immed
sleep(5)

say_hello.apply_async_with_reservation_list([(tags.RESOURCE_REPOSITORY_TYPE, 'zoo')], args=[3, 'Greetings']) #immed
say_hello.apply_async_with_reservation_list([(tags.RESOURCE_REPOSITORY_TYPE, 'bar')], args=[5, 'Greetings']) #immed
say_hello.apply_async_with_reservation_list([(tags.RESOURCE_REPOSITORY_TYPE, 'zoo'), (tags.RESOURCE_REPOSITORY_TYPE, 'bar'), (tags.RESOURCE_REPOSITORY_TYPE, 'blech')], args=[5, 'Greetings']) # 3 sec delay
sleep(5)

say_hello.apply_async_with_reservation_list([(tags.RESOURCE_REPOSITORY_TYPE, 'zoo')], args=[5, 'Greetings']) # immed
say_hello.apply_async_with_reservation_list([(tags.RESOURCE_REPOSITORY_TYPE, 'bar')], args=[10, 'Greetings']) # immed
say_hello.apply_async_with_reservation_list([(tags.RESOURCE_REPOSITORY_TYPE, 'zoo'), (tags.RESOURCE_REPOSITORY_TYPE, 'bar'), (tags.RESOURCE_REPOSITORY_TYPE, 'blech')], args=[5, 'Greetings']) # 5 sec delay
sleep(10)

say_hello.apply_async_with_reservation_list([(tags.RESOURCE_REPOSITORY_TYPE, 'zoo')], args=[4, 'Greetings']) # immed
say_hello.apply_async_with_reservation_list([(tags.RESOURCE_REPOSITORY_TYPE, 'bar')], args=[2, 'Greetings']) # immed
say_hello.apply_async_with_reservation_list([(tags.RESOURCE_REPOSITORY_TYPE, 'blech'), (tags.RESOURCE_REPOSITORY_TYPE, 'bar')], args=[5, 'Greetings']) # immed
say_hello.apply_async_with_reservation_list([(tags.RESOURCE_REPOSITORY_TYPE, 'zoo'), (tags.RESOURCE_REPOSITORY_TYPE, 'bar')], args=[10, 'Greetings']) # 4 sec delay
say_hello.apply_async_with_reservation_list([(tags.RESOURCE_REPOSITORY_TYPE, 'blech')], args=[2, 'Greetings']) # immed
say_hello.apply_async_with_reservation_list([(tags.RESOURCE_REPOSITORY_TYPE, 'bar'), (tags.RESOURCE_REPOSITORY_TYPE, 'blech')], args=[2, 'Greetings']) # 2 sec delay






