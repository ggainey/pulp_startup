#!/bin/bash -v
wait_until_task_finished() {
    echo "Polling the task until it has reached a final state."
    local task_url=$1
    while true
    do
        local response=$(curl -k -s -u admin:admin --cert ~/.pulp/user-cert.pem -X GET $task_url)
        local state=$(jq -r .state <<< ${response})
        #jq . <<< "${response}"
        case ${state} in
            failed|canceled)
                echo "Task in final state: ${state}"
                exit 1
                ;;
            finished)
                echo "$task_url complete."
                break
                ;;
            *)
                echo "Still waiting..."
                sleep 1
                ;;
        esac
    done
}

REMOTE1='https://fixtures.pulpproject.org/rpm-with-modules-modified/'
REMOTE2='https://fixtures.pulpproject.org/rpm-unsigned-modified/'
BASE1='foo'
BASE2='bar'
DEST='destination'
# broken erratum
ERRATUM='RHEA-2012:0059'
#ERRATUM='RHEA-2012:0056'
#ERRATUM='RHEA-2012:0057'
# /rpm-with-modules-modified
# 'broken' errata
# RHEA-2012:0055 RHEA-2012:0056 RHEA-2012:0059
# valid errata:
# RHEA-2012:0057 RHEA-2012:0058 RHEA-2012:0060

# /rpm-unsigned-modified
# 'broken' errata
# none
# valid errata:
# RHEA-2012:0055 RHEA-2012:0056 RHEA-2012:0057 RHEA-2012:0058

START=12
END=12
for n in $(seq $START $END); do
    pulp-admin rpm repo create --repo-id=$BASE1$n --relative-url=$BASE1$n --feed=$REMOTE1 --download-policy on_demand
    pulp-admin rpm repo sync run --repo-id=$BASE1$n
    pulp-admin rpm repo create --repo-id=$BASE2$n --relative-url=$BASE2$n --feed=$REMOTE2 --download-policy on_demand
    pulp-admin rpm repo sync run --repo-id=$BASE2$n
    pulp-admin rpm repo create --repo-id=$DEST$n
done
for n in $(seq $START $END); do
    TASK_OUTPUT=$(curl -k -u admin:admin --cert ~/.pulp/user-cert.pem \
         -d "{\"source_repo_id\":\"$BASE1$n\",\"criteria\":{\"type_ids\":[\"erratum\"],\"filters\":{\"unit\":{\"id\":\"$ERRATUM\"}}},\"override_config\":{\"recursive_conservative\":true,\"additional_repos\":{\"$BASE2$n\": \"$DEST$n\"}}}" \
         -H "Content-Type: application/json" \
         -X POST https://localhost/pulp/api/v2/repositories/$DEST$n/actions/associate/)
    TASK_URL=$(echo $TASK_OUTPUT | jq -r '.spawned_tasks[]._href')
    echo "Task url : " $TASK_URL
    if [ -z "$TASK_URL" ]; then echo "NO TASK?!?"; exit; fi
    wait_until_task_finished https://localhost$TASK_URL

done
pulp-admin rpm repo search --fields id,content_unit_counts --match 'id=^destination[0-9]+'
